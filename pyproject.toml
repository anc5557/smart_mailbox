[project]
name = "smart-mailbox"
version = "0.1.0"
description = "사용자가 .eml 이메일 파일을 드래그 앤 드롭으로 넣으면, LLM을 통해 자동 태깅 및 회신이 필요한 경우 AI가 답장을 생성해주는 스마트 메일 분석 도구입니다."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # AI/LLM 라이브러리
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langgraph>=0.0.30",
    
    # 이메일 처리
    "email-validator>=2.1.0",
    
    # GUI 프레임워크
    "PyQt6>=6.4.0",
    "PyQt6-tools>=6.4.0",
    
    # 내장 데이터베이스 (SQLite 기본 포함, ORM용)
    "sqlalchemy>=2.0.0",
    
    # HTTP 클라이언트 (Ollama 연결용)
    "httpx>=0.26.0",
    "requests>=2.31.0",
    
    # 유틸리티
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "typer>=0.9.0",
    "rich>=13.7.0",
    
    # 암호화
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.12.0",
    "flake8>=6.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

build = [
    "pyinstaller>=6.3.0",
    "cx-freeze>=6.15.0",
    "auto-py-to-exe>=2.4.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
smart-mailbox = "smart_mailbox.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/smart_mailbox"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
